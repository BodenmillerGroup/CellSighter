import pandas as pdimport numpy as npval_results = ["/Volumes/immucan_volume/processed_data/Panel_1/CellSighter/Output/Output_13/val_results.csv",                "/Volumes/immucan_volume/processed_data/Panel_1/CellSighter/Output/Output_2/val_results.csv"]               # "/Volumes/immucan_volume/processed_data/Panel_1/CellSighter/Output/Output_4/val_results.csv",               # "/Volumes/immucan_volume/processed_data/Panel_1/CellSighter/Output/Output_5/val_results.csv",               # "/Volumes/immucan_volume/processed_data/Panel_1/CellSighter/Output/Output_6/val_results.csv",               # "/Volumes/immucan_volume/processed_data/Panel_1/CellSighter/Output/Output_7/val_results.csv",               # "/Volumes/immucan_volume/processed_data/Panel_1/CellSighter/Output/Output_8/val_results.csv",               # "/Volumes/immucan_volume/processed_data/Panel_1/CellSighter/Output/Output_9/val_results.csv",               # "/Volumes/immucan_volume/processed_data/Panel_1/CellSighter/Output/Output_10/val_results.csv"] #Fill here the paths to all of yours val_results.csv files you got from the training/validationdf_all_labeled = pd.DataFrame()ensemble_size = len(val_results)for i, val_result in enumerate(val_results):    curr_df = pd.read_csv(val_result, index_col=0)    prob_list = curr_df["prob_list"].apply(eval)    num_classes = len(prob_list.iloc[0])    curr_df[[f"prob_class_{j}" for j in range(num_classes)]] = prob_list.apply(pd.Series)    curr_df.columns = [c+f"_ens_{i}" for c in curr_df.columns]    curr_df["unique_id"] = [f"{image}_{cell}" for cell, image in zip(curr_df[f"cell_id_ens_{i}"],curr_df[f"image_id_ens_{i}"])]        if df_all_labeled.empty:        df_all_labeled = curr_df    else:        df_all_labeled = pd.merge(df_all_labeled,curr_df,on="unique_id", suffixes=("",f"_{i}"))        # df_all_labeled = pd.concat([df_all_labeled, curr_df], axis=1)for i in range(num_classes):    df_all_labeled[f"prob_mean_class_{i}"] = df_all_labeled[[f"prob_class_{i}_ens_{j}" for j in range(ensemble_size)]].mean(axis=1)    df_all_labeled[f"prob_max_class_{i}"] = df_all_labeled[[f"prob_class_{i}_ens_{j}" for j in range(ensemble_size)]].max(axis=1)df_all_labeled["pred_per_mean"] = df_all_labeled[[f"prob_mean_class_{i}" for i in range(num_classes)]].values.argmax(1)df_all_labeled["pred_prob_per_mean"] = df_all_labeled[[f"prob_mean_class_{i}" for i in range(num_classes)]].max(axis=1)df_all_labeled["pred_per_max"] = df_all_labeled[[f"prob_max_class_{i}" for i in range(num_classes)]].values.argmax(1)df_all_labeled["pred_prob_per_max"] = df_all_labeled[[f"prob_max_class_{i}" for i in range(num_classes)]].max(axis=1)df_all_labeled["label"] = df_all_labeled["label_ens_1"]df_all_labeled["cell_id"] = df_all_labeled["cell_id_ens_1"]df_all_labeled["image_id"] = df_all_labeled["image_id_ens_1"]df_all_labeled[["image_id", "cell_id", "label", "pred_per_mean", "pred_prob_per_mean", "pred_per_max", "pred_prob_per_max"]].to_csv("merged_ensemble.csv")